[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "danl-200-quarto.html",
    "href": "danl-200-quarto.html",
    "title": "R Basics",
    "section": "",
    "text": "Code\nx &lt;- 2\ny &lt;- x + 12"
  },
  {
    "objectID": "danl-200-quarto.html#dive-into-markdown-syntax",
    "href": "danl-200-quarto.html#dive-into-markdown-syntax",
    "title": "R Basics",
    "section": "2.1 Dive into Markdown syntax",
    "text": "2.1 Dive into Markdown syntax\nCheck out Classwork 3 - Markdown Basics"
  },
  {
    "objectID": "danl-200-quarto.html#r-as-a-calculator",
    "href": "danl-200-quarto.html#r-as-a-calculator",
    "title": "R Basics",
    "section": "3.1 1. R as a Calculator",
    "text": "3.1 1. R as a Calculator\nR can be used as a simple calculator. You can perform arithmetic operations like addition (+), subtraction (-), multiplication (*), and division (/). For example, typing 2 + 2 in the R console will give you 4."
  },
  {
    "objectID": "danl-200-quarto.html#variables",
    "href": "danl-200-quarto.html#variables",
    "title": "R Basics",
    "section": "3.2 Variables",
    "text": "3.2 Variables\nVariables in R are used to store data. You can create a variable using the assignment operator &lt;- (option/Alt + -). For example:\n\n\nCode\nmy_variable &lt;- 10\n\n\nThis will store the value 10 in my_variable."
  },
  {
    "objectID": "danl-200-quarto.html#data-types",
    "href": "danl-200-quarto.html#data-types",
    "title": "R Basics",
    "section": "3.3 Data Types",
    "text": "3.3 Data Types\n\nR has several basic data types:\n\nNumeric: For decimal values like 2.5.\nInteger: For whole numbers like 2L (the L tells R it is an integer).\nCharacter: For text or string values, e.g., \"Hello\".\nLogical: For boolean values (TRUE or FALSE)."
  },
  {
    "objectID": "danl-200-quarto.html#vectors",
    "href": "danl-200-quarto.html#vectors",
    "title": "R Basics",
    "section": "3.4 Vectors",
    "text": "3.4 Vectors\nVectors are a basic data structure in R. They contain elements of the same type. You can create a vector using the c() function:\n\n\nCode\nmy_vector &lt;- c(1, 2, 3, 4, 5)"
  },
  {
    "objectID": "danl-200-quarto.html#data-frames",
    "href": "danl-200-quarto.html#data-frames",
    "title": "R Basics",
    "section": "3.5 Data Frames",
    "text": "3.5 Data Frames\nData frames are used for storing data tables in R. It is a list of vectors of equal length. For example, to create a simple data frame:\n\n\nCode\ndf &lt;- data.frame(\n  Name = c(\"Alice\", \"Bob\"), \n  Age = c(25, 30)\n  )"
  },
  {
    "objectID": "danl-200-quarto.html#functions",
    "href": "danl-200-quarto.html#functions",
    "title": "R Basics",
    "section": "3.6 Functions",
    "text": "3.6 Functions\nFunctions are used to carry out specific tasks in R. For example, sum() is a function that adds numbers together:\n\n\nCode\nsum(1, 2, 3) # Returns 6\n\n\n[1] 6"
  },
  {
    "objectID": "danl-200-quarto.html#packages",
    "href": "danl-200-quarto.html#packages",
    "title": "R Basics",
    "section": "3.7 Packages",
    "text": "3.7 Packages\nR has a vast collection of packages for various statistical tasks. You can install a package using install.packages(\"packageName\") and load it using library(packageName)."
  },
  {
    "objectID": "danl-200-quarto.html#help-system",
    "href": "danl-200-quarto.html#help-system",
    "title": "R Basics",
    "section": "3.8 Help System",
    "text": "3.8 Help System\nTo get help on a specific function or topic, use the help() function or the shorthand ?, like ?sum on R Console."
  },
  {
    "objectID": "posts/Homework 4/HW4.html",
    "href": "posts/Homework 4/HW4.html",
    "title": "Homework 4",
    "section": "",
    "text": "Let‚Äôs analyze the homework 4 data:\n\nhealth_cust &lt;- read_csv('https://bcdanl.github.io/data/custdata_rev.csv')\n\n\n\n\n\n  \n\n\n\n\nHousing Type Statistics\n\nhousing_type_statistics &lt;- health_cust |&gt; \n  group_by(housing_type) |&gt; \n  summarize(\n    mean = mean(income, na.rm = TRUE),\n    SD = sd(income, na.rm = TRUE),\n    Q1 = quantile(income, probs = 0.25, na.rm = TRUE),\n    Median = median(income, na.rm = TRUE),\n    Q3 = quantile(income, probs = 0.75, na.rm = TRUE), \n    Max = max(income, na.rm = TRUE)\n  )\n\n\n\nState of Residency Statistics\n\nstate_statistics &lt;- health_cust |&gt; \n  group_by(state_of_res) |&gt; \n  summarize(\n    mean = mean(income, na.rm = TRUE),\n    SD = sd(income, na.rm = TRUE),\n    Q1 = quantile(income, probs = 0.25, na.rm = TRUE),\n    Median = median(income, na.rm = TRUE),\n    Q3 = quantile(income, probs = 0.75, na.rm = TRUE), \n    Max = max(income, na.rm = TRUE)\n  )\n\n\n\nMarital Status Statistics\n\nmarital_statistics &lt;- health_cust |&gt; \n  group_by(marital_status) |&gt; \n  summarize(\n    mean = mean(income, na.rm = TRUE),\n    SD = sd(income, na.rm = TRUE),\n    Q1 = quantile(income, probs = 0.25, na.rm = TRUE),\n    Median = median(income, na.rm = TRUE),\n    Q3 = quantile(income, probs = 0.75, na.rm = TRUE), \n    Max = max(income, na.rm = TRUE)\n  )\n\n\n\nIncome by Housing Type\n\nincome_by_housing_type &lt;- health_cust |&gt; \n  group_by(income, housing_type) |&gt; \n  summarize(Count = n(), .groups = \"drop\") |&gt; \n  group_by(housing_type) |&gt; \n  arrange(desc(income))"
  },
  {
    "objectID": "posts/Homework 4/HW4.html#the-mean-standard-deviation-first-quartile-median-third-quartile-and-maximum-of-income-for-each-housing_type.",
    "href": "posts/Homework 4/HW4.html#the-mean-standard-deviation-first-quartile-median-third-quartile-and-maximum-of-income-for-each-housing_type.",
    "title": "Homework 4",
    "section": "The mean, standard deviation, first quartile, median, third quartile, and maximum of ‚Äòincome‚Äô for each ‚Äòhousing_type‚Äô.",
    "text": "The mean, standard deviation, first quartile, median, third quartile, and maximum of ‚Äòincome‚Äô for each ‚Äòhousing_type‚Äô.\n\nhousing_type_statistics &lt;- health_cust |&gt; \n  group_by(housing_type) |&gt; \n  summarize(\n    mean = mean(income, na.rm = TRUE),\n    SD = sd(income, na.rm = TRUE),\n    Q1 = quantile(income, probs = 0.25, na.rm = TRUE),\n    Median = median(income, na.rm = TRUE),\n    Q3 = quantile(income, probs = 0.75, na.rm = TRUE), \n    Max = max(income, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code with no space in the folder name.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/spotify/spotify.html",
    "href": "posts/spotify/spotify.html",
    "title": "Spotify",
    "section": "",
    "text": "Let‚Äôs analyze the ‚Äòspotify‚Äô data:\nspotify_all &lt;- read_csv('https://bcdanl.github.io/data/spotify_all.csv')\nThe data.frame spotify_all includes information about Spotify users‚Äô playlists."
  },
  {
    "objectID": "posts/spotify/spotify.html#variable-description",
    "href": "posts/spotify/spotify.html#variable-description",
    "title": "Spotify",
    "section": "Variable Description",
    "text": "Variable Description\n\npid: playlist ID; unique ID for playlist\nplaylist_name: a name of playlist\npos: a position of the track within a playlist (starting from 0)\nartist_name: name of the track‚Äôs primary artist\ntrack_name: name of the track\nduration_ms: duration of the track in milliseconds\nalbum_name: name of the track‚Äôs album"
  },
  {
    "objectID": "posts/spotify/spotify.html#q1a",
    "href": "posts/spotify/spotify.html#q1a",
    "title": "Spotify",
    "section": "Q1a",
    "text": "Q1a\n\nFind the ten most popular song.\n\nA value of a song is defined as a combination of a artist_name value and a track_name value.\nWho are artists for those ten most popular song?\n\n\nAnswer:\n\npopular_songs &lt;- spotify_all |&gt; \n  group_by(artist_name, track_name) |&gt; \n  summarize(Count = n()) |&gt; \n  arrange(desc(Count))\n\ntop_ten_songs &lt;- popular_songs |&gt; \n  head(n = 10)\n\ntop_ten_songs_artists &lt;- top_ten_songs$artist_name"
  },
  {
    "objectID": "posts/spotify/spotify.html#q1b",
    "href": "posts/spotify/spotify.html#q1b",
    "title": "Spotify",
    "section": "Q1b",
    "text": "Q1b\n\nFind the five most popular artist in terms of the number of occurrences in the data.frame, spotify_all.\nWhat is the most popular song for each of the five most popular artist?\n\nAnswer:\n\npopular_artists &lt;- spotify_all |&gt; \n  group_by(artist_name) |&gt; \n  summarize(Count = n()) |&gt; \n  arrange(desc(Count))\n\ntop_five_artists &lt;- popular_artists |&gt; \n  head(n = 5)\n\ntop_song_by_artist &lt;- popular_songs |&gt; \n  filter(artist_name %in% top_five_artists$artist_name) |&gt; \n  group_by(artist_name) |&gt; \n  slice_head(n = 1)"
  },
  {
    "objectID": "posts/spotify/spotify.html#q1c",
    "href": "posts/spotify/spotify.html#q1c",
    "title": "Spotify",
    "section": "Q1c",
    "text": "Q1c\n\nCreate a data.frame named drake_one_dance that includes all playlists featuring the song where track_name equals ‚ÄúOne Dance‚Äù and artist_name equals ‚ÄúDrake‚Äù.\n\nEnsure that the data.frame drake_one_dance does not contain any playlists where the song ‚ÄúOne Dance‚Äù by Drake is absent.\n\nWhat is the song with the highest frequency of appearances after Drake‚Äôs ‚ÄúOne Dance‚Äù in the newly created data.frame, drake_one_dance?\n\nAnswer:\n\ndrake_one_dance_playlists &lt;- spotify_all |&gt; \n  filter(track_name == \"One Dance\" & artist_name == \"Drake\") |&gt; \n  select(pid)\n\ndrake_one_dance &lt;- spotify_all |&gt; \n  filter(pid %in% drake_one_dance_playlists$pid)\n\ncheck_drake_one_dance &lt;- drake_one_dance %&gt;%\n  group_by(pid) %&gt;%\n  filter(all(c(\"One Dance\" %in% track_name, \"Drake\" %in% artist_name))) %&gt;%\n  ungroup()\n\n\npopular_song_after_one_dance &lt;- drake_one_dance |&gt; \n  group_by(track_name) |&gt; \n  summarize(Appearances = n()) |&gt; \n  arrange(desc(Appearances)) |&gt; \n  filter(track_name != \"One Dance\") |&gt; \n  slice_head(n = 1)"
  },
  {
    "objectID": "posts/spotify/spotify.html#q1d",
    "href": "posts/spotify/spotify.html#q1d",
    "title": "Spotify",
    "section": "Q1d",
    "text": "Q1d\nProvide both (1) ggplot code and (2) a couple of sentences to describe the relationship between pos and the ten most popular artists.\nAnswer:\n\ntop_ten_artist_names &lt;- popular_artists |&gt; \n  head(n = 10)\n\ntop_ten_artists &lt;- spotify_all |&gt; \n  filter(artist_name %in% top_ten_artist_names$artist_name)\n\ntop_ten_artists &lt;- left_join(top_ten_artists, top_ten_artist_names, by = \"artist_name\")\n\nggplot(top_ten_artists,\n       aes(x = pos))+\n  geom_bar(position = \"stack\") +\n  facet_wrap(artist_name ~ .)\n\n\n\n# The top ten artists all have a similar relationship with pos. They all have a higher frequency of when pos is at 0 and close to 0 and decrease in frequency as pos increases. Since these are the top ten artists, it makes sense that their songs would be at the beginning of playlists more often than at the end."
  },
  {
    "objectID": "posts/spotify/spotify.html#q1e",
    "href": "posts/spotify/spotify.html#q1e",
    "title": "Spotify",
    "section": "Q1e",
    "text": "Q1e\nCreate the data.frame with pid-artist level of observations with the following four variables:\n\npid: playlist id\nplaylist_name: name of playlist\nartist: name of the track‚Äôs primary artist, which appears only once within a playlist\nn_artist: number of occurrences of artist within a playlist\n\nAnswer:\n\nplaylist_artist_count &lt;- spotify_all |&gt; \n  group_by(pid, artist_name) |&gt; \n  summarize(n_artist = n()) |&gt; \n  ungroup()\n\nplaylist_artist_level &lt;- spotify_all %&gt;%\n  select(pid, playlist_name, artist_name) %&gt;%\n  distinct() %&gt;%\n  left_join(playlist_artist_count, by = c(\"pid\", \"artist_name\"))\n\nplaylist_artist_level &lt;- rename(playlist_artist_level, artist = artist_name)"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Brett Patmore",
    "section": "",
    "text": "Brett Patmore majors in Business Administration at SUNY Geneseo. Brett is also a member of the Indoor and Outdoor Track & Field teams at SUNY Geneseo. His events are pole vault and javelin."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Brett Patmore",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Business Administration | May 2024"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Brett Patmore",
    "section": "Experience",
    "text": "Experience\nEntrepreneurial Digital Sales and Marketing | Operating Online Marketplaces | 2020-Present"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nSpotify\n\n\n\n\n\n\n\n\n\nMay 10, 2024\n\n\nBrett Patmore\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nHomework 4\n\n\n\n\n\n\n\n\n\nMay 10, 2024\n\n\nBrett Patmore\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  }
]