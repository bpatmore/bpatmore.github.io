---
title: R Basics 
subtitle: "DANL 200: Introduction to Data Analytics"
author: 
  - name: YOUR NAME
  - name: YOUR COWORKER 1
  - name: YOUR COWORKER 2
date: last-modified

execute: 
  echo: true    # true false
  eval: true    # true false
  warning: false    # true false
  message: false    # true false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true    # true false
    number-sections: true    # true false
    code-fold: show    # true false show       # https://quarto.org/docs/output-formats/html-code.html
    code-tools: true    # true false
    highlight-style: atom-one        # atom-one tango espresso   # https://quarto.org/docs/output-formats/html-code.html#highlighting
---

```{r setup}
#| include: false
library(tidyverse)
library(hrbrthemes)
library(skimr)
library(DT)

```

# Auto-completion

```{r}
library(tidyverse)

# The function `str_c()`, provided by `tidyverse`, concatenates characters.
str_c("Data", "Analytics")
str_c("Data", "Analytics", sep = "!")
```
#Classwork 5
#Question 2
```{r}
fare <- "10.00"
tip <- "2.00"
tax <- "0.80"

class(fare)
```

```{r}
str_c("The total trip cost is: $", "12.80")
```

```{r}
fare <- as.numeric(fare)
tax <- as.numeric(tax)
tip <- as.numeric(tip)

total <- fare + tax + tip
total

total <- as.character(total)
```

```{r}
str_c("The total trip cost is: $", total, "0")
```


#Math Functions
```{r}
5 * abs(-3)
sqrt(17) / 2
exp(3)
log(3)
log(exp(3))
exp(log(3))
```
```{r}
x <- c(1, 2, 3, 4, 5)

sum(x)
mean(x)
sd(x)
```


#Vectorized Operations
  #applying a function to every element of a vector       without explicitly writing a loop
```{r}
a <- c(1, 2, 3, 4, 5)
b <- c(5, 4, 3, 2, 1)

a + b
a - b
a * b
a / b
sqrt(a)
```

#NULL and NA values
  #NULL is just an alias for c(), the empty vector
  #NA indicated missing or unavailable data
```{r}
c(c(), 1, NULL)
c("a", NA, "c")
```
  #is.na() is to  check whether  expression evaluates to NA
```{r}
is.na(NA)
is.na(c())
is.na("A")
```

#Casting Variables
```{r}
orig_number <- 4.39898498
class(orig_number)
mod_number <- as.integer(orig_number)
class(mod_number)
```
```{r}
# TRUE converts to 1; 
# FALSE does to 0.
as.numeric(TRUE)
as.numeric(FALSE)
```
```{r}
#built-in functions for casting variables
as.character()
as.integer()
as.numeric()
as.factor()
```

#Pathnames
#Absolute Path
```{r}
path <- "/Users/brettpatmore/Downloads/car_data.csv"

car_data <- read_csv(path)
```
#Relative Path
```{r}
getwd()
car_data_relative <- read_csv("car_data.csv")
```

